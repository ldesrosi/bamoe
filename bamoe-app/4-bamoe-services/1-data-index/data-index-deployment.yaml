apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: data-index
  name: data-index
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: data-index
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose.yml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: data-index
    spec:
      securityContext:
        fsGroup: 0
      containers:
        - env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: kafka.bamoe-app.svc.cluster.local:9092
            - name: KOGITO_DATA_INDEX_PROPS
              value: -Dkogito.protobuf.folder=/home/kogito/data/protobufs/
            - name: QUARKUS_DATASOURCE_JDBC_URL
              value: jdbc:postgresql://postgresql.bamoe-app.svc.cluster.local:5432/bamoe
            - name: QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION
              value: update
            - name: QUARKUS_DATASOURCE_USERNAME
              value: bamoe_poc
            - name: QUARKUS_DATASOURCE_PASSWORD
              value: password
            - name: QUARKUS_HTTP_CORS_ORIGINS
              value: /.*/
            - name: RUNTIME_TOOLS_MANAGEMENT_CONSOLE_KOGITO_ENV_MODE
              value: PROD
            - name: KOGITO_CONSOLES_KEYCLOAK_URL
              value: https://keycloak.bamoe-canvas-3cd0ec11030dfa215f262137faf739f1-0000.eu-gb.containers.appdomain.cloud/
            - name: KOGITO_CONSOLES_KEYCLOAK_DISABLE_HEALTH_CHECK
              value: 'true'
            - name: KOGITO_CONSOLES_KEYCLOAK_UPDATE_TOKEN_VALIDITY
              value: '60'
            - name: KOGITO_CONSOLES_KEYCLOAK_REALM
              value: kogito
            - name: KOGITO_CONSOLES_KEYCLOAK_CLIENT_ID
              value: kogito-data-index-service
          image: quay.io/kiegroup/kogito-data-index-postgresql:main
          name: bamoe-poc-data-index
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /home/kogito/data/protobufs
              name: data-index-claim0
      restartPolicy: Always
      volumes:
        - name: data-index-claim0
          persistentVolumeClaim:
            claimName: data-index-claim0
